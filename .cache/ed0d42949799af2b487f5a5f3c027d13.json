{"dependencies":[{"name":"/Users/rocture/code/bird/study-mobile/package.json","includedInParent":true,"mtime":1528036115000},{"name":"/Users/rocture/code/bird/study-mobile/node_modules/rmc-steps/node_modules/babel-runtime/node_modules/core-js/package.json","includedInParent":true,"mtime":1528036115000}],"generated":{"js":"// 7.1.4 ToInteger\nvar ceil = Math.ceil;\nvar floor = Math.floor;\nmodule.exports = function (it) {\n  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);\n};\n","map":{"mappings":[{"source":"../node_modules/rmc-steps/node_modules/babel-runtime/node_modules/core-js/library/modules/_to-integer.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/rmc-steps/node_modules/babel-runtime/node_modules/core-js/library/modules/_to-integer.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/rmc-steps/node_modules/babel-runtime/node_modules/core-js/library/modules/_to-integer.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/rmc-steps/node_modules/babel-runtime/node_modules/core-js/library/modules/_to-integer.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/rmc-steps/node_modules/babel-runtime/node_modules/core-js/library/modules/_to-integer.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/rmc-steps/node_modules/babel-runtime/node_modules/core-js/library/modules/_to-integer.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/rmc-steps/node_modules/babel-runtime/node_modules/core-js/library/modules/_to-integer.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}}],"sources":{"../node_modules/rmc-steps/node_modules/babel-runtime/node_modules/core-js/library/modules/_to-integer.js":"// 7.1.4 ToInteger\nvar ceil = Math.ceil;\nvar floor = Math.floor;\nmodule.exports = function (it) {\n  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);\n};\n"},"lineCount":7}},"hash":"f83ee02a17f7e3ef005e04f5aa20c1bf","cacheData":{"env":{}}}